// =================================================================================================
//  @file FRenderCore.ixx
// 
//  @brief 그래픽 렌더러 코어
//  
//  @date 2022/12/13
// =================================================================================================
module;

#include "Common/Define/GlobalMacro.h"

export module KG.Renderer.Core.RenderCore;

import KG.Renderer.Core.RenderEventListener;
import KG.Platform.Core.PlatformCore;
import KG.Common.Define.MainModule;
import KG.Common.Define.EventSender;


namespace KG
{
	//----------------------------------------------------------------------
	//! @brief 렌더링 분배 코어 인터페이스
	//----------------------------------------------------------------------
	export class FRenderCore : public TBaseEventSender< IRenderEventListener >
	{
	public:
		//----------------------------------------------------------------------
		//! @brief 생성자
		//----------------------------------------------------------------------
		FRenderCore() = default;

		//----------------------------------------------------------------------
		//! @brief 소멸자
		//----------------------------------------------------------------------
		virtual ~FRenderCore() = default;

		//----------------------------------------------------------------------
		//! @brief 초기화한다.
		//! @return 초기화 성공 여부
		//----------------------------------------------------------------------
		virtual bool Initialize( const FRenderSetting& InRenderSetting );

		//----------------------------------------------------------------------
		//! @brief 렌더 씬을 제출한다
		//----------------------------------------------------------------------
		virtual void SubmitRenderScene();

		//----------------------------------------------------------------------
		//! @brief 렌더링을 시작한다
		//----------------------------------------------------------------------
		virtual void StartRender();

		//----------------------------------------------------------------------
		//! @brief 렌더링 종료까지 기다린다.
		//----------------------------------------------------------------------
		virtual void WaitForRenderEnd();

		//----------------------------------------------------------------------
		//! @brief 
		//! @param InRenderSetting 
		//----------------------------------------------------------------------
		virtual void OnChangeSettings( const FRenderSetting& InRenderSetting );
	};
}
